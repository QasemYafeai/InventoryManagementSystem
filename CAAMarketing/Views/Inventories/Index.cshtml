@model IEnumerable<CAAMarketing.Models.Inventory>

@{
    ViewData["Title"] = "Index";
}

<h1>Inventory Index</h1>

<p>
    <a asp-action="DownloadInventory" class="btn btn-info float-end">Download Inventory Report</a>
</p>

<form asp-action="Index" method="get">
        <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />

    <div class="form-horizontal">
        <button class="btn btn-outline-secondary" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
            Filter/Search
        </button>
        <div class="collapse @(ViewData["Filtering"])" id="collapseFilter">
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="form-group col-md-4">
                        <label class="control-label">Filter by Location:</label>
                        @Html.DropDownList("LocationID", null, "All Locations", htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label">Check Low Quantity Items:</label>
                        @Html.CheckBox("LowQty", null)
                    </div>

                    <div class="form-group col-md-4">
                        <label class="control-label">Search Item Name OR UPC:</label>
                        @Html.TextBox("SearchString", null, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-4 align-self-end">
                        <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary" />
                        <a asp-action="Index" class="btn btn-outline-dark">Clear</a>
                    </div>
                </div>
            </div>
        </div>
    </div>


@if (ViewBag.InventoryLow != null)
{
            <script>
                alert("@ViewBag.InventoryLow");
            </script>
}

<table class="table">
    <thead>
        <tr>
            <th>Item Image :</th>
            <th>
                <input type="submit" name="actionButton" value="Item" class="btn btn-link" />
            </th>
            <th>
                <input type="submit" name="actionButton" value="UPC" class="btn btn-link" />
            </th>
            <th>
                <input type="submit" name="Location" value="Location" class="btn btn-link" />
            </th>
            <th>
                <input type="submit" name="actionButton" value="Quantity" class="btn btn-link" />
            </th>
            <th>
                <input type="submit" name="actionButton" value="Cost" class="btn btn-link" />
            </th>
            <th>
                <input type="submit" name="actionButton" value="Employee" class="btn btn-link" />
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var inventory in Model)
        {
            <tr>
                    <td>
                        @{
                            if (inventory.Item.ItemThumbNail?.Content != null)
                            {
                                string imageBase64 = Convert.ToBase64String(inventory.Item.ItemThumbNail.Content);
                                string imageSrc = string.Format("data:" + inventory.Item.ItemThumbNail.MimeType + ";base64,{0}", imageBase64);
                                        <img src="@imageSrc" alt="Item Picture of @inventory.Item.Name" title="Item Picture of @inventory.Item.Name" class="img-fluid rounded" />
                            }
                        }
                    </td>
                <td>
                    @Html.DisplayFor(modelItem => inventory.Item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => inventory.Item.UPC)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => inventory.Location.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => inventory.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => inventory.Cost)
                </td>
                    <td>
                        @Html.DisplayFor(modelItem => inventory.Item.CreatedBy)
                    </td>
                       
                    
                <td>
                    
                    <a asp-action="Details" asp-route-id="@inventory.Id">Details</a>
                    
                </td>
            </tr>
        }
    </tbody>
</table>
<partial name="_PagingNavBar" />

</form>




