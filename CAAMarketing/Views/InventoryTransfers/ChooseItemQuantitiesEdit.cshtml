@model IEnumerable<CAAMarketing.Models.InventoryTransfer>
@inject IHttpContextAccessor HttpContextAccessor
@{

    ViewData["Title"] = "Create";
    //CAAMarketing.Models.Item SelectedItems = (CAAMarketing.Models.Item)ViewBag.SelectedItems
}



<div class="container">
    <ul class="progressbar">
        <li class="active">
            <p>Edit Selected Items</p>
        </li>
        <li class="active">
            <p>Edit Locations/Quantities</p>
        </li>
        <li>
            <p>Event Overview</p>
        </li>
    </ul>
</div>


<div class="deimage">
    <h1><u><b>Step 3:</b></u></h1><h2>Edit Location And Quanity For Selected Products :</h2>
    <a href="@Url.Action("EditOverview", "InventoryTransfers", new { id = HttpContextAccessor.HttpContext.Session.GetString("TransferIDForEditOverView") })" title="Click this to go to the Overview Page" class="btn-exit">Back To Overview</a>
    <hr />
</div>

<!-- Help Button -->
<div class="container my-3">
    <button type="button" class="btn btn-info btn-color-Create" data-bs-toggle="modal" data-bs-target="#chooseItemQuantitiesEditHelpModal">
        Need Help? Click here
    </button>
</div>
<!-- Help Modal -->
<div class="modal fade" id="chooseItemQuantitiesEditHelpModal" tabindex="-1" aria-labelledby="chooseItemQuantitiesEditHelpModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="chooseItemQuantitiesEditHelpModalLabel">How to Edit Locations/Quantities for Selected Items</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="list-group">
                    <div class="list-group-item">
                        <i class="bi bi-pencil-square text-primary"></i> <strong>Edit Quantities:</strong> Enter the quantity of each item that you want to transfer to the selected location.
                    </div>
                    <div class="list-group-item">
                        <i class="bi bi-pencil-square text-primary"></i> <strong>Edit Locations:</strong> Choose the location where you want to transfer each item.
                    </div>
                    <div class="list-group-item">
                        <i class="bi bi-save text-success"></i> <strong>Save:</strong> Click the "Submit" button to save the changes.
                    </div>
                    <div class="list-group-item">
                        <i class="bi bi-arrow-left-square-fill text-danger"></i> <strong>Back to Overview:</strong> Click the "Back to Overview" button to return to the overview page of the event.
                    </div>
                    <div class="list-group-item">
                        <i class="bi bi-arrow-left-square-fill text-primary"></i> <strong>Back:</strong> Click the "Back" button to go back to the previous page and edit the selected items again.
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<center><h3>Selected Items:</h3></center>
<form asp-action="ChooseItemQuantitiesEdit" method="post">

    <div class="selected-items">
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="col-md-4 col-lg-4" style="padding:15px">
                    <div class="row">

                       <fieldset class="@(item.IsComfirmed ? "item-fieldset-readonly" : "item-fieldset")">
                            @{
                                    if (item.IsComfirmed)
                                    {
                                        <legend>Item #@item.Item.ID: @item.Item.Name (Comfirmed)</legend>
                                    }
                                    else
                                    {
                                        <legend>Item #@item.Item.ID: @item.Item.Name</legend>
                                    }
                                }
                            <div class="row">
                                <div class="col-md-2">
                                    @{
                                        if (item.Item.ItemImages?.Content != null)
                                        {
                                            string imageBase64 = Convert.ToBase64String(item.Item.ItemImages.Content);
                                            string imageSrc = string.Format("data:" + item.Item.ItemImages.MimeType + ";base64,{0}", imageBase64);
                                            <img src="@imageSrc" alt="Item Picture of @item.Item.Name" title="Item Picture of @item.Item.Name" class="img-fluid avatar" />
                                        }
                                        else
                                        {
                                            <div>
                                                <img src="~/images/image-not-found_tm.png" alt="Image not found" title="Image not found" class="img-fluid avatar" />
                                            </div>
                                        }
                                    }
                                </div>
                                <div class="col-md-10">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label for="@($"total-stock-{item.Item.ID}")">Stock Left:</label>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                @{
                                                    int totalStock = 0;
                                                    foreach (var inventory in item.Item.Inventories)
                                                    {
                                                        totalStock += inventory.Quantity;
                                                    }
                                                }
                                                <input type="text" class="form-control" readonly value="@totalStock" id="@($"total-stock-{item.Item.ID}")">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label>Choose Location:</label>
                                        </div>
                                        <div class="col-md-6">
                                            @{
                                                if (item.Item.Inventories.Count() == 0)
                                                {
                                                    <p>None</p>
                                                }
                                                else
                                                {
                                                    <select class="form-control required" name="@($"locations-{item.Item.ID}")" id="@($"locations-{item.Item.ID}")" required>
                                                        <option value="">--Select a location--</option>
                                                        @foreach (var inventory in item.Item.Inventories)
                                                        {
                                                            if (inventory.LocationID != item.ToLocationId)
                                                            {
                                                                if (item.FromLocationId == inventory.LocationID)
                                                                {
                                                                    <option value="@inventory.Location.Id" data-quantity="@inventory.Quantity" selected>@inventory.Location.Name</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@inventory.Location.Id" data-quantity="@inventory.Quantity">@inventory.Location.Name</option>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <option value="@inventory.Location.Id" data-quantity="@inventory.Quantity" disabled readonly>@inventory.Location.Name</option>
                                                            }
                                                        }
                                                    </select>


                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            
                                            @*<input value="" id="quantity-" name="itemId1" />*@
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label for="@($"location-quantity-max-{item.Item.ID}")">Location Qty:</label>
                                        </div>
                                        <div class="col-md-6">
                                            <input type="text" class="form-control" value="" id="@($"location-quantity-max-{item.Item.ID}")" readonly>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label for="@($"location-quantity-{item.Item.ID}")">Transfer Qty:</label>
                                        </div>
                                        <div class="col-md-6">
                                            @if (item.Quantity == 0)
                                            {
                                                <input type="number" class="form-control" value="@item.Quantity" id="@($"location-quantity-{item.Item.ID}")" name="@($"itemId{item.Item.ID}")" required>
                                            }
                                            else
                                            {
                                                <input type="number" class="form-control" value="@item.Quantity" id="@($"location-quantity-{item.Item.ID}")" name="@($"itemId{item.Item.ID}")" required>
                                            }

                                            <input type="number" hidden="hidden" class="form-control" value="" id="@($"locationId-{item.Item.ID}")" name="@($"locationId{item.Item.ID}")" />
                                        </div>
                                    </div>
                                    <div class="row">
                                            <div class="col-md-6">
                                                <label for="@($"location-quantity-{item.Item.ID}")">To:</label>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <input type="text" class="form-control" readonly value="@item.ToLocation.Name">
                                                </div>
                                            </div>
                                    </div>


                                </div>
                            </div>
                        </fieldset>


                    </div>
                </div>
            }
        </div>
    </div>
    <button type="submit" title="Submit and save" class="btn-submit">Submit</button>
 <div class="tooltip"> <a asp-action="EditSelectItems"> <img src="~/images/icons8-go-back-24.png" alt="Back Icon" /> <span class="tooltiptext">Back</span></a> </div>

</form>




@section Scripts{

    <script type="text/javascript">
        
        //$(document).ready(function () {
        //    $('select[name^="locations-"]').change(function () {
        //        var selectedLocationId = $(this).val();
        //        var selectedLocationQuantity = $(this).find('option:selected').data('quantity');
        //        var totalStockInput = $('#location-quantity-' + $(this).attr('id').split('-')[1]);
        //        totalStockInput.val(selectedLocationQuantity);


        //    });
        //});


        $(document).ready(function () {
            $('select[name^="locations-"]').change(function () {
                var selectedLocationId = $(this).val();
                var selectedLocationQuantity = $(this).find('option:selected').data('quantity');
                var itemID = $(this).attr('id').split('-')[1];
                var locationIdInput = $('#locationId-' + itemID);
                var totalStockInput = $('#location-quantity-' + itemID);
                var totalStockMAXInput = $('#location-quantity-max-' + itemID);


                console.log(selectedLocationId);
                locationIdInput.val(selectedLocationId);
                //totalStockInput.val(selectedLocationQuantity);
                totalStockMAXInput.val(selectedLocationQuantity);
            });
        });



    </script>

}





<style>
    .container {
        width: 100%;
    }

    .progressbar {
        counter-reset: step;
    }

        .progressbar li {
            list-style: none;
            display: inline-block;
            width: 30.33%;
            position: relative;
            text-align: center;
        }

            .progressbar li:before {
                content: counter(step);
                counter-increment: step;
                width: 30px;
                height: 30px;
                line-height: 30px;
                border: 1px solid #ddd;
                border-radius: 100%;
                display: block;
                text-align: center;
                margin: 0 auto 10px auto;
                background-color: #fff;
            }

            .progressbar li:after {
                content: "";
                position: absolute;
                width: 100%;
                height: 1px;
                background-color: #ddd;
                top: 15px;
                left: -50%;
                z-index: -1;
            }

            .progressbar li:first-child:after {
                content: none;
            }

            .progressbar li.active {
                color: green;
            }

                .progressbar li.active:before {
                    border-color: green;
                }

                .progressbar li.active + li:after {
                    background-color: green;
                }

    .select2 {
        border-color: red !important;
    }
</style>
<style>

    .selected-items {
        flex-wrap: wrap;
    }

    .item-fieldset {
        margin-bottom: 30px;
        padding: 30px 20px;
        border-radius: 10px;
        border: 2px solid #ccc;
        box-sizing: border-box;
        background-color: #f9f9f9;
        transition: all 1s ease;
    }

        .item-fieldset:hover {
            background-color: #e9e9e9;
            border: 4px solid #ccc;
            cursor: pointer;
        }

        .item-fieldset legend {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 20px;
        }

        .item-fieldset label {
            font-size: 16px;
            font-weight: bold;
        }

        .item-fieldset input[type="text"] {
            font-size: 14px;
            padding: 10px;
        }

        .item-fieldset .form-check {
            margin-top: 10px;
        }

        .item-fieldset .form-check-input {
            margin-right: 10px;
        }



</style>

<style>
    .btn-exit {
        display: inline-block;
        font-weight: 400;
        color: #fff;
        background-color: #dc3545;
        border-color: #dc3545;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        text-align: center;
        text-decoration: none;
        vertical-align: middle;
        cursor: pointer;
          border-radius: 2rem;
        border: none;
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

        .btn-exit:hover {
            transform: scale(1.1);
            color: #fff;
            background-color: #c82333;
            border-color: #bd2130;
        }

        .btn-exit:focus, .btn-exit.focus {
            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);
        }

        .btn-exit.disabled, .btn-exit:disabled {
            color: #fff;
            background-color: #dc3545;
            border-color: #dc3545;
        }

        .btn-exit:not(:disabled):not(.disabled):active, .btn-exit:not(:disabled):not(.disabled).active {
            color: #fff;
            background-color: #bd2130;
            border-color: #b21f2d;
        }

            .btn-exit:not(:disabled):not(.disabled):active:focus, .btn-exit:not(:disabled):not(.disabled).active:focus {
                box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);
            }

</style>


<style>



    .item-fieldset-readonly {
        margin-bottom: 30px;
        padding: 30px 20px;
        border-radius: 10px;
        border: 2px solid #ccc;
        box-sizing: border-box;
        background-color: #f9f9f9;
        transition: all 1s ease;
        pointer-events: none;
        opacity: 0.7;
    }

        .item-fieldset-readonly:hover {
            background-color: #e9e9e9;
            border: 4px solid #ccc;
            cursor: pointer;
        }

        .item-fieldset-readonly legend {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 20px;
        }

        .item-fieldset-readonly label {
            font-size: 16px;
            font-weight: bold;
        }

        .item-fieldset-readonly input[type="text"] {
            font-size: 14px;
            padding: 10px;
        }

        .item-fieldset-readonly .form-check {
            margin-top: 10px;
        }

        .item-fieldset-readonly .form-check-input {
            margin-right: 10px;
        }

</style>

